$dokka.format:html
$dokka.linkExtension:html
$dokka.location:io.ktor.cio$bufferedWriter(kotlinx.coroutines.experimental.io.ByteWriteChannel, java.nio.charset.Charset)io.ktor.cio/kotlinx.coroutines.experimental.io.-byte-write-channel/buffered-writer.html
$dokka.location:io.ktor.cio$executor(kotlin.coroutines.experimental.CoroutineContext)io.ktor.cio/kotlin.coroutines.experimental.-coroutine-context/executor.html
$dokka.location:io.ktor.cio$pass(kotlinx.coroutines.experimental.io.ByteReadChannel, java.nio.ByteBuffer, kotlin.SuspendFunction1((java.nio.ByteBuffer, kotlin.Unit)))io.ktor.cio/kotlinx.coroutines.experimental.io.-byte-read-channel/pass.html
$dokka.location:io.ktor.cio$readChannel(java.io.File, kotlin.Long, kotlin.Long, kotlin.coroutines.experimental.CoroutineContext)io.ktor.cio/java.io.-file/read-channel.html
$dokka.location:io.ktor.cio$readChannel(java.nio.file.Path)io.ktor.cio/java.nio.file.-path/read-channel.html
$dokka.location:io.ktor.cio$readChannel(java.nio.file.Path, kotlin.Long, kotlin.Long)io.ktor.cio/java.nio.file.-path/read-channel.html
$dokka.location:io.ktor.cio$toByteArray(kotlinx.coroutines.experimental.io.ByteReadChannel, kotlin.Int, kotlinx.io.pool.ObjectPool((java.nio.ByteBuffer)))io.ktor.cio/kotlinx.coroutines.experimental.io.-byte-read-channel/to-byte-array.html
$dokka.location:io.ktor.cio$toByteReadChannel(java.io.InputStream, kotlinx.io.pool.ObjectPool((java.nio.ByteBuffer)), kotlinx.coroutines.experimental.Job)io.ktor.cio/java.io.-input-stream/to-byte-read-channel.html
$dokka.location:io.ktor.cio$use(kotlinx.coroutines.experimental.io.ByteWriteChannel, kotlin.SuspendFunction1((kotlinx.coroutines.experimental.io.ByteWriteChannel, kotlin.Unit)))io.ktor.cio/kotlinx.coroutines.experimental.io.-byte-write-channel/use.html
$dokka.location:io.ktor.cio$use(kotlinx.io.pool.ObjectPool((io.ktor.cio.use.T)), kotlin.SuspendFunction1((io.ktor.cio.use.T, kotlin.Unit)))io.ktor.cio/kotlinx.io.pool.-object-pool/use.html
$dokka.location:io.ktor.cio$write(kotlinx.coroutines.experimental.io.ByteWriteChannel, kotlin.String, java.nio.charset.Charset)io.ktor.cio/kotlinx.coroutines.experimental.io.-byte-write-channel/write.html
$dokka.location:io.ktor.cio$writeChannel(java.io.File, kotlinx.io.pool.ObjectPool((java.nio.ByteBuffer)))io.ktor.cio/java.io.-file/write-channel.html
$dokka.location:io.ktor.cio$writer(kotlinx.coroutines.experimental.io.ByteWriteChannel, java.nio.charset.Charset)io.ktor.cio/kotlinx.coroutines.experimental.io.-byte-write-channel/writer.html
$dokka.location:io.ktor.config$tryGetString(com.typesafe.config.Config, kotlin.String)io.ktor.config/com.typesafe.config.-config/try-get-string.html
$dokka.location:io.ktor.config$tryGetStringList(com.typesafe.config.Config, kotlin.String)io.ktor.config/com.typesafe.config.-config/try-get-string-list.html
$dokka.location:io.ktor.http$escapeIfNeeded(kotlin.String)io.ktor.http/kotlin.-string/escape-if-needed.html
$dokka.location:io.ktor.http$formUrlEncode(kotlin.collections.List((kotlin.Pair((kotlin.String, kotlin.String)))))io.ktor.http/kotlin.collections.-list/form-url-encode.html
$dokka.location:io.ktor.http$formUrlEncodeTo(kotlin.collections.List((kotlin.Pair((kotlin.String, kotlin.String)))), java.lang.Appendable)io.ktor.http/kotlin.collections.-list/form-url-encode-to.html
$dokka.location:io.ktor.http$fromHttpDateString(kotlin.String)io.ktor.http/kotlin.-string/from-http-date-string.html
$dokka.location:io.ktor.http$parseUrlEncodedParameters(kotlin.String, java.nio.charset.Charset, kotlin.Int)io.ktor.http/kotlin.-string/parse-url-encoded-parameters.html
$dokka.location:io.ktor.http$quote(kotlin.String)io.ktor.http/kotlin.-string/quote.html
$dokka.location:io.ktor.http$toHeaderParamsList(kotlin.collections.Iterable((kotlin.Pair((kotlin.String, )))))io.ktor.http/kotlin.collections.-iterable/to-header-params-list.html
$dokka.location:io.ktor.http$toHttpDateString(java.time.temporal.Temporal)io.ktor.http/java.time.temporal.-temporal/to-http-date-string.html
$dokka.location:io.ktor.http$toHttpDateString(kotlin.Long)io.ktor.http/kotlin.-long/to-http-date-string.html
$dokka.location:io.ktor.network.tls$readTLSCertificate(kotlinx.io.core.ByteReadPacket, io.ktor.network.tls.TLSHandshakeHeader)io.ktor.network.tls/kotlinx.io.core.-byte-read-packet/read-t-l-s-certificate.html
$dokka.location:io.ktor.network.tls$readTLSClientHello(kotlinx.coroutines.experimental.io.ByteReadChannel, io.ktor.network.tls.TLSRecordHeader, io.ktor.network.tls.TLSHandshakeHeader)io.ktor.network.tls/kotlinx.coroutines.experimental.io.-byte-read-channel/read-t-l-s-client-hello.html
$dokka.location:io.ktor.network.tls$readTLSHandshake(kotlinx.coroutines.experimental.io.ByteReadChannel, io.ktor.network.tls.TLSRecordHeader, io.ktor.network.tls.TLSHandshakeHeader)io.ktor.network.tls/kotlinx.coroutines.experimental.io.-byte-read-channel/read-t-l-s-handshake.html
$dokka.location:io.ktor.network.tls$readTLSHandshake(kotlinx.io.core.ByteReadPacket, io.ktor.network.tls.TLSHandshakeHeader)io.ktor.network.tls/kotlinx.io.core.-byte-read-packet/read-t-l-s-handshake.html
$dokka.location:io.ktor.network.tls$readTLSRecordHeader(kotlinx.coroutines.experimental.io.ByteReadChannel, io.ktor.network.tls.TLSRecordHeader)io.ktor.network.tls/kotlinx.coroutines.experimental.io.-byte-read-channel/read-t-l-s-record-header.html
$dokka.location:io.ktor.network.tls$readTLSServerHello(kotlinx.io.core.ByteReadPacket, io.ktor.network.tls.TLSHandshakeHeader)io.ktor.network.tls/kotlinx.io.core.-byte-read-packet/read-t-l-s-server-hello.html
$dokka.location:io.ktor.network.tls$writeChangeCipherSpec(kotlinx.io.core.BytePacketBuilder, io.ktor.network.tls.TLSRecordHeader)io.ktor.network.tls/kotlinx.io.core.-byte-packet-builder/write-change-cipher-spec.html
$dokka.location:io.ktor.network.tls$writeEncryptedPreMasterSecret(kotlinx.io.core.BytePacketBuilder, kotlin.ByteArray, java.security.PublicKey, java.security.SecureRandom)io.ktor.network.tls/kotlinx.io.core.-byte-packet-builder/write-encrypted-pre-master-secret.html
$dokka.location:io.ktor.network.tls$writeTLSClientHello(kotlinx.io.core.BytePacketBuilder, io.ktor.network.tls.TLSHandshakeHeader)io.ktor.network.tls/kotlinx.io.core.-byte-packet-builder/write-t-l-s-client-hello.html
$dokka.location:io.ktor.network.tls$writeTLSHandshake(kotlinx.io.core.BytePacketBuilder, io.ktor.network.tls.TLSHandshakeHeader)io.ktor.network.tls/kotlinx.io.core.-byte-packet-builder/write-t-l-s-handshake.html
$dokka.location:io.ktor.network.tls$writeTLSHeader(kotlinx.io.core.BytePacketBuilder, io.ktor.network.tls.TLSRecordHeader)io.ktor.network.tls/kotlinx.io.core.-byte-packet-builder/write-t-l-s-header.html
$dokka.location:io.ktor.server.netty$suspendAwait(io.netty.util.concurrent.Future((io.ktor.server.netty.suspendAwait.T)))io.ktor.server.netty/io.netty.util.concurrent.-future/suspend-await.html
$dokka.location:io.ktor.server.netty$suspendAwait(io.netty.util.concurrent.Future((io.ktor.server.netty.suspendAwait.T)), kotlin.Function2((kotlin.Throwable, kotlin.coroutines.experimental.Continuation((io.ktor.server.netty.suspendAwait.T)), kotlin.Unit)))io.ktor.server.netty/io.netty.util.concurrent.-future/suspend-await.html
$dokka.location:io.ktor.server.netty$suspendWriteAwait(io.netty.util.concurrent.Future((io.ktor.server.netty.suspendWriteAwait.T)))io.ktor.server.netty/io.netty.util.concurrent.-future/suspend-write-await.html
$dokka.location:io.ktor.sessions$transformRead(kotlin.collections.List((io.ktor.sessions.SessionTransportTransformer)), kotlin.String)io.ktor.sessions/kotlin.collections.-list/transform-read.html
$dokka.location:io.ktor.sessions$transformWrite(kotlin.collections.List((io.ktor.sessions.SessionTransportTransformer)), kotlin.String)io.ktor.sessions/kotlin.collections.-list/transform-write.html
$dokka.location:io.ktor.util$chomp(kotlin.String, kotlin.String, kotlin.Function0((kotlin.Pair((kotlin.String, )))))io.ktor.util/kotlin.-string/chomp.html
$dokka.location:io.ktor.util$combineSafe(java.io.File, java.nio.file.Path)io.ktor.util/java.io.-file/combine-safe.html
$dokka.location:io.ktor.util$combineSafe(java.io.File, kotlin.String)io.ktor.util/java.io.-file/combine-safe.html
$dokka.location:io.ktor.util$combineSafe(java.nio.file.Path, java.nio.file.Path)io.ktor.util/java.nio.file.-path/combine-safe.html
$dokka.location:io.ktor.util$contains(kotlin.ranges.LongRange, kotlin.ranges.LongRange)io.ktor.util/kotlin.ranges.-long-range/contains.html
$dokka.location:io.ktor.util$copy(java.nio.ByteBuffer, kotlin.Int)io.ktor.util/java.nio.-byte-buffer/copy.html
$dokka.location:io.ktor.util$copy(java.nio.ByteBuffer, kotlinx.io.pool.ObjectPool((java.nio.ByteBuffer)), kotlin.Int)io.ktor.util/java.nio.-byte-buffer/copy.html
$dokka.location:io.ktor.util$decodeString(java.nio.ByteBuffer, java.nio.charset.Charset)io.ktor.util/java.nio.-byte-buffer/decode-string.html
$dokka.location:io.ktor.util$deflated(kotlinx.coroutines.experimental.io.ByteReadChannel, kotlin.Boolean, kotlinx.io.pool.ObjectPool((java.nio.ByteBuffer)))io.ktor.util/kotlinx.coroutines.experimental.io.-byte-read-channel/deflated.html
$dokka.location:io.ktor.util$deflated(kotlinx.coroutines.experimental.io.ByteWriteChannel, kotlin.Boolean, kotlinx.io.pool.ObjectPool((java.nio.ByteBuffer)))io.ktor.util/kotlinx.coroutines.experimental.io.-byte-write-channel/deflated.html
$dokka.location:io.ktor.util$error(org.slf4j.Logger, kotlin.Throwable)io.ktor.util/org.slf4j.-logger/error.html
$dokka.location:io.ktor.util$escapeHTML(kotlin.String)io.ktor.util/kotlin.-string/escape-h-t-m-l.html
$dokka.location:io.ktor.util$extension#java.nio.file.Pathio.ktor.util/java.nio.file.-path/extension.html
$dokka.location:io.ktor.util$findAllSupertypes(java.lang.Class((kotlin.Any)))io.ktor.util/java.lang.-class/find-all-supertypes.html
$dokka.location:io.ktor.util$length#kotlin.ranges.LongRangeio.ktor.util/kotlin.ranges.-long-range/length.html
$dokka.location:io.ktor.util$moveTo(java.nio.ByteBuffer, java.nio.ByteBuffer, kotlin.Int)io.ktor.util/java.nio.-byte-buffer/move-to.html
$dokka.location:io.ktor.util$moveToByteArray(java.nio.ByteBuffer)io.ktor.util/java.nio.-byte-buffer/move-to-byte-array.html
$dokka.location:io.ktor.util$normalizeAndRelativize(java.nio.file.Path)io.ktor.util/java.nio.file.-path/normalize-and-relativize.html
$dokka.location:io.ktor.util$toLocalDateTime(java.util.Date)io.ktor.util/java.util.-date/to-local-date-time.html
$dokka.location:io.ktor.util$toZonedDateTime(java.util.Date)io.ktor.util/java.util.-date/to-zoned-date-time.html
io.ktor.application
io.ktor.auth
io.ktor.auth.jwt
io.ktor.auth.ldap
io.ktor.cio
io.ktor.client
io.ktor.client.call
io.ktor.client.cio
io.ktor.client.engine
io.ktor.client.engine.apache
io.ktor.client.engine.cio
io.ktor.client.engine.jetty
io.ktor.client.features
io.ktor.client.features.auth.basic
io.ktor.client.features.cookies
io.ktor.client.features.json
io.ktor.client.features.websocket
io.ktor.client.request
io.ktor.client.response
io.ktor.client.tests
io.ktor.client.tests.cio
io.ktor.client.tests.utils
io.ktor.client.utils
io.ktor.config
io.ktor.content
io.ktor.features
io.ktor.freemarker
io.ktor.gson
io.ktor.html
io.ktor.http
io.ktor.http.cio
io.ktor.http.cio.internals
io.ktor.http.cio.websocket
io.ktor.http.websocket
io.ktor.jackson
io.ktor.locations
io.ktor.metrics
io.ktor.network.selector
io.ktor.network.sockets
io.ktor.network.tls
io.ktor.network.util
io.ktor.org.apache.commons.collections4.map
io.ktor.pipeline
io.ktor.request
io.ktor.response
io.ktor.routing
io.ktor.server.cio
io.ktor.server.engine
io.ktor.server.jetty
io.ktor.server.jetty.internal
io.ktor.server.netty
io.ktor.server.netty.cio
io.ktor.server.servlet
io.ktor.server.servlet.v4
io.ktor.server.testing
io.ktor.server.testing.client
io.ktor.server.tomcat
io.ktor.sessions
io.ktor.util
io.ktor.velocity
io.ktor.websocket
