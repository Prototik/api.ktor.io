$dokka.format:kotlin-website
$dokka.linkExtension:html
$dokka.location:io.ktor.client.call.Typeio.ktor.client.call/-type/index.html
$dokka.location:io.ktor.config$tryGetString(com.typesafe.config.Config, kotlin.String)io.ktor.config/com.typesafe.config.-config/try-get-string.html
$dokka.location:io.ktor.config$tryGetStringList(com.typesafe.config.Config, kotlin.String)io.ktor.config/com.typesafe.config.-config/try-get-string-list.html
$dokka.location:io.ktor.http$decodeURLPart(kotlin.String, kotlin.Int, kotlin.Int, java.nio.charset.Charset)io.ktor.http/kotlin.-string/decode-u-r-l-part.html
$dokka.location:io.ktor.http$decodeURLQueryComponent(kotlin.CharSequence, kotlin.Int, kotlin.Int, kotlin.Boolean, java.nio.charset.Charset)io.ktor.http/kotlin.-char-sequence/decode-u-r-l-query-component.html
$dokka.location:io.ktor.http$encodeOAuth(kotlin.String)io.ktor.http/kotlin.-string/encode-o-auth.html
$dokka.location:io.ktor.http$encodeURLParameter(kotlin.String, kotlin.Boolean)io.ktor.http/kotlin.-string/encode-u-r-l-parameter.html
$dokka.location:io.ktor.http$encodeURLQueryComponent(kotlin.String, kotlin.Boolean, kotlin.Boolean, java.nio.charset.Charset)io.ktor.http/kotlin.-string/encode-u-r-l-query-component.html
$dokka.location:io.ktor.http$escapeIfNeeded(kotlin.String)io.ktor.http/kotlin.-string/escape-if-needed.html
$dokka.location:io.ktor.http$formUrlEncode(kotlin.collections.List((kotlin.Pair((kotlin.String, kotlin.String)))))io.ktor.http/kotlin.collections.-list/form-url-encode.html
$dokka.location:io.ktor.http$formUrlEncodeTo(kotlin.collections.List((kotlin.Pair((kotlin.String, kotlin.String)))), java.lang.Appendable)io.ktor.http/kotlin.collections.-list/form-url-encode-to.html
$dokka.location:io.ktor.http$fromHttpDateString(kotlin.String)io.ktor.http/kotlin.-string/from-http-date-string.html
$dokka.location:io.ktor.http$fromHttpToGmtDate(kotlin.String)io.ktor.http/kotlin.-string/from-http-to-gmt-date.html
$dokka.location:io.ktor.http$parseUrlEncodedParameters(kotlin.String, java.nio.charset.Charset, kotlin.Int)io.ktor.http/kotlin.-string/parse-url-encoded-parameters.html
$dokka.location:io.ktor.http$quote(kotlin.String)io.ktor.http/kotlin.-string/quote.html
$dokka.location:io.ktor.http$toHeaderParamsList(kotlin.collections.Iterable((kotlin.Pair((kotlin.String, )))))io.ktor.http/kotlin.collections.-iterable/to-header-params-list.html
$dokka.location:io.ktor.http$toHttpDateString(java.time.temporal.Temporal)io.ktor.http/java.time.temporal.-temporal/to-http-date-string.html
$dokka.location:io.ktor.http$toHttpDateString(kotlin.Long)io.ktor.http/kotlin.-long/to-http-date-string.html
$dokka.location:io.ktor.http$urlParts(kotlin.String)io.ktor.http/kotlin.-string/url-parts.html
$dokka.location:io.ktor.network.tls.certificates$saveToFile(java.security.KeyStore, java.io.File, kotlin.String)io.ktor.network.tls.certificates/java.security.-key-store/save-to-file.html
$dokka.location:io.ktor.server.netty$suspendAwait(io.netty.util.concurrent.Future((io.ktor.server.netty.suspendAwait.T)))io.ktor.server.netty/io.netty.util.concurrent.-future/suspend-await.html
$dokka.location:io.ktor.server.netty$suspendAwait(io.netty.util.concurrent.Future((io.ktor.server.netty.suspendAwait.T)), kotlin.Function2((kotlin.Throwable, kotlin.coroutines.experimental.Continuation((io.ktor.server.netty.suspendAwait.T)), kotlin.Unit)))io.ktor.server.netty/io.netty.util.concurrent.-future/suspend-await.html
$dokka.location:io.ktor.server.netty$suspendWriteAwait(io.netty.util.concurrent.Future((io.ktor.server.netty.suspendWriteAwait.T)))io.ktor.server.netty/io.netty.util.concurrent.-future/suspend-write-await.html
$dokka.location:io.ktor.sessions$transformRead(kotlin.collections.List((io.ktor.sessions.SessionTransportTransformer)), kotlin.String)io.ktor.sessions/kotlin.collections.-list/transform-read.html
$dokka.location:io.ktor.sessions$transformWrite(kotlin.collections.List((io.ktor.sessions.SessionTransportTransformer)), kotlin.String)io.ktor.sessions/kotlin.collections.-list/transform-write.html
$dokka.location:io.ktor.util$asStream(kotlinx.io.core.Input)io.ktor.util/kotlinx.io.core.-input/as-stream.html
$dokka.location:io.ktor.util$chomp(kotlin.String, kotlin.String, kotlin.Function0((kotlin.Pair((kotlin.String, )))))io.ktor.util/kotlin.-string/chomp.html
$dokka.location:io.ktor.util$combineSafe(java.io.File, java.nio.file.Path)io.ktor.util/java.io.-file/combine-safe.html
$dokka.location:io.ktor.util$combineSafe(java.io.File, kotlin.String)io.ktor.util/java.io.-file/combine-safe.html
$dokka.location:io.ktor.util$combineSafe(java.nio.file.Path, java.nio.file.Path)io.ktor.util/java.nio.file.-path/combine-safe.html
$dokka.location:io.ktor.util$contains(kotlin.ranges.LongRange, kotlin.ranges.LongRange)io.ktor.util/kotlin.ranges.-long-range/contains.html
$dokka.location:io.ktor.util$copy(java.nio.ByteBuffer, kotlin.Int)io.ktor.util/java.nio.-byte-buffer/copy.html
$dokka.location:io.ktor.util$copy(java.nio.ByteBuffer, kotlinx.io.pool.ObjectPool((java.nio.ByteBuffer)), kotlin.Int)io.ktor.util/java.nio.-byte-buffer/copy.html
$dokka.location:io.ktor.util$decodeBase64(kotlinx.io.core.ByteReadPacket)io.ktor.util/kotlinx.io.core.-byte-read-packet/decode-base64.html
$dokka.location:io.ktor.util$decodeString(java.nio.ByteBuffer, java.nio.charset.Charset)io.ktor.util/java.nio.-byte-buffer/decode-string.html
$dokka.location:io.ktor.util$deflated(kotlinx.coroutines.experimental.io.ByteReadChannel, kotlin.Boolean, kotlinx.io.pool.ObjectPool((java.nio.ByteBuffer)))io.ktor.util/kotlinx.coroutines.experimental.io.-byte-read-channel/deflated.html
$dokka.location:io.ktor.util$deflated(kotlinx.coroutines.experimental.io.ByteWriteChannel, kotlin.Boolean, kotlinx.io.pool.ObjectPool((java.nio.ByteBuffer)))io.ktor.util/kotlinx.coroutines.experimental.io.-byte-write-channel/deflated.html
$dokka.location:io.ktor.util$encodeBase64(kotlin.String)io.ktor.util/kotlin.-string/encode-base64.html
$dokka.location:io.ktor.util$encodeBase64(kotlinx.io.core.ByteReadPacket)io.ktor.util/kotlinx.io.core.-byte-read-packet/encode-base64.html
$dokka.location:io.ktor.util$error(org.slf4j.Logger, kotlin.Throwable)io.ktor.util/org.slf4j.-logger/error.html
$dokka.location:io.ktor.util$escapeHTML(kotlin.String)io.ktor.util/kotlin.-string/escape-h-t-m-l.html
$dokka.location:io.ktor.util$extension#java.nio.file.Pathio.ktor.util/java.nio.file.-path/extension.html
$dokka.location:io.ktor.util$findAllSupertypes(java.lang.Class((kotlin.Any)))io.ktor.util/java.lang.-class/find-all-supertypes.html
$dokka.location:io.ktor.util$forEach(kotlin.collections.Map((io.ktor.util.forEach.K, io.ktor.util.forEach.V)), kotlin.Function2((io.ktor.util.forEach.K, io.ktor.util.forEach.V, kotlin.Unit)))io.ktor.util/kotlin.collections.-map/for-each.html
$dokka.location:io.ktor.util$isLowerCase(kotlin.Char)io.ktor.util/kotlin.-char/is-lower-case.html
$dokka.location:io.ktor.util$length#kotlin.ranges.LongRangeio.ktor.util/kotlin.ranges.-long-range/length.html
$dokka.location:io.ktor.util$moveTo(java.nio.ByteBuffer, java.nio.ByteBuffer, kotlin.Int)io.ktor.util/java.nio.-byte-buffer/move-to.html
$dokka.location:io.ktor.util$moveToByteArray(java.nio.ByteBuffer)io.ktor.util/java.nio.-byte-buffer/move-to-byte-array.html
$dokka.location:io.ktor.util$normalizeAndRelativize(java.nio.file.Path)io.ktor.util/java.nio.file.-path/normalize-and-relativize.html
$dokka.location:io.ktor.util$read(java.nio.channels.ReadableByteChannel, kotlinx.io.core.IoBuffer)io.ktor.util/java.nio.channels.-readable-byte-channel/read.html
$dokka.location:io.ktor.util$toCharArray(kotlin.String)io.ktor.util/kotlin.-string/to-char-array.html
$dokka.location:io.ktor.util$toGMTDate(java.time.Instant)io.ktor.util/java.time.-instant/to-g-m-t-date.html
$dokka.location:io.ktor.util$toGMTDate(java.time.ZonedDateTime)io.ktor.util/java.time.-zoned-date-time/to-g-m-t-date.html
$dokka.location:io.ktor.util$toLocalDateTime(java.util.Date)io.ktor.util/java.util.-date/to-local-date-time.html
$dokka.location:io.ktor.util$toZonedDateTime(java.util.Date)io.ktor.util/java.util.-date/to-zoned-date-time.html
$dokka.location:io.ktor.util$unmodifiable(kotlin.collections.Set((io.ktor.util.unmodifiable.T)))io.ktor.util/kotlin.collections.-set/unmodifiable.html
$dokka.location:io.ktor.util$write(java.nio.channels.WritableByteChannel, kotlinx.io.core.IoBuffer)io.ktor.util/java.nio.channels.-writable-byte-channel/write.html
$dokka.location:io.ktor.util.cio$bufferedWriter(kotlinx.coroutines.experimental.io.ByteWriteChannel, java.nio.charset.Charset)io.ktor.util.cio/kotlinx.coroutines.experimental.io.-byte-write-channel/buffered-writer.html
$dokka.location:io.ktor.util.cio$executor(kotlin.coroutines.experimental.CoroutineContext)io.ktor.util.cio/kotlin.coroutines.experimental.-coroutine-context/executor.html
$dokka.location:io.ktor.util.cio$pass(kotlinx.coroutines.experimental.io.ByteReadChannel, java.nio.ByteBuffer, kotlin.SuspendFunction1((java.nio.ByteBuffer, kotlin.Unit)))io.ktor.util.cio/kotlinx.coroutines.experimental.io.-byte-read-channel/pass.html
$dokka.location:io.ktor.util.cio$readChannel(java.io.File, kotlin.Long, kotlin.Long, kotlin.coroutines.experimental.CoroutineContext)io.ktor.util.cio/java.io.-file/read-channel.html
$dokka.location:io.ktor.util.cio$readChannel(java.nio.file.Path)io.ktor.util.cio/java.nio.file.-path/read-channel.html
$dokka.location:io.ktor.util.cio$readChannel(java.nio.file.Path, kotlin.Long, kotlin.Long)io.ktor.util.cio/java.nio.file.-path/read-channel.html
$dokka.location:io.ktor.util.cio$toByteArray(kotlinx.coroutines.experimental.io.ByteReadChannel, kotlin.Int)io.ktor.util.cio/kotlinx.coroutines.experimental.io.-byte-read-channel/to-byte-array.html
$dokka.location:io.ktor.util.cio$toByteReadChannel(java.io.InputStream, kotlinx.io.pool.ObjectPool((java.nio.ByteBuffer)), kotlin.coroutines.experimental.CoroutineContext, kotlinx.coroutines.experimental.Job)io.ktor.util.cio/java.io.-input-stream/to-byte-read-channel.html
$dokka.location:io.ktor.util.cio$use(kotlinx.coroutines.experimental.io.ByteWriteChannel, kotlin.SuspendFunction1((kotlinx.coroutines.experimental.io.ByteWriteChannel, kotlin.Unit)))io.ktor.util.cio/kotlinx.coroutines.experimental.io.-byte-write-channel/use.html
$dokka.location:io.ktor.util.cio$write(kotlinx.coroutines.experimental.io.ByteWriteChannel, kotlin.String, java.nio.charset.Charset)io.ktor.util.cio/kotlinx.coroutines.experimental.io.-byte-write-channel/write.html
$dokka.location:io.ktor.util.cio$writeChannel(java.io.File, kotlinx.io.pool.ObjectPool((java.nio.ByteBuffer)))io.ktor.util.cio/java.io.-file/write-channel.html
$dokka.location:io.ktor.util.cio$writer(kotlinx.coroutines.experimental.io.ByteWriteChannel, java.nio.charset.Charset)io.ktor.util.cio/kotlinx.coroutines.experimental.io.-byte-write-channel/writer.html
io.ktor.application
io.ktor.auth
io.ktor.auth.jwt
io.ktor.auth.ldap
io.ktor.client
io.ktor.client.call
io.ktor.client.engine
io.ktor.client.engine.android
io.ktor.client.engine.apache
io.ktor.client.engine.cio
io.ktor.client.engine.jetty
io.ktor.client.engine.mock
io.ktor.client.engine.okhttp
io.ktor.client.features
io.ktor.client.features.auth.basic
io.ktor.client.features.cookies
io.ktor.client.features.json
io.ktor.client.features.json.serializer
io.ktor.client.features.websocket
io.ktor.client.request
io.ktor.client.request.forms
io.ktor.client.response
io.ktor.client.tests
io.ktor.client.tests.cio
io.ktor.client.tests.utils
io.ktor.client.utils
io.ktor.config
io.ktor.content
io.ktor.features
io.ktor.freemarker
io.ktor.gson
io.ktor.html
io.ktor.http
io.ktor.http.cio
io.ktor.http.cio.internals
io.ktor.http.cio.websocket
io.ktor.http.content
io.ktor.http.parsing
io.ktor.http.websocket
io.ktor.jackson
io.ktor.locations
io.ktor.metrics
io.ktor.network.selector
io.ktor.network.sockets
io.ktor.network.tls
io.ktor.network.tls.certificates
io.ktor.network.tls.extensions
io.ktor.network.util
io.ktor.pipeline
io.ktor.request
io.ktor.response
io.ktor.routing
io.ktor.server.cio
io.ktor.server.engine
io.ktor.server.jetty
io.ktor.server.jetty.internal
io.ktor.server.netty
io.ktor.server.netty.cio
io.ktor.server.servlet
io.ktor.server.servlet.v4
io.ktor.server.testing
io.ktor.server.testing.client
io.ktor.server.tomcat
io.ktor.sessions
io.ktor.util
io.ktor.util.cio
io.ktor.util.date
io.ktor.util.pipeline
io.ktor.velocity
io.ktor.webjars
io.ktor.websocket
